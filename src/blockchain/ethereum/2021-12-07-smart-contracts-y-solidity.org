#+TITLE: Smart Contracts and Solidity
#+DESCRIPTION: Serie que recopila una aprendizaje sobre blockchain
#+AUTHOR: Sergio Benítez
#+DATE:<2021-12-07 Wed>
#+STARTUP: fold
#+HUGO_BASE_DIR: ~/Development/suabochica-blog/
#+HUGO_SECTION: /post
#+HUGO_WEIGHT: auto
#+HUGO_AUTO_SET_LASTMOD: t

* Contratos Inteligentes

* Administración de Memoria

- memory
- storage
- callData

* Tipos de Datos

- uint
- int
- bool
- address

* Conversión de Tipos

Todos los lenguajes de programación soportan la conversión de tipos. Solidity da la opción de hacer conversiones implícitas o explícitas. Se reviseran algunos ejemplos para familiarizarse con las conversiones de tipo y los posibles errores de compilación que servirán como guía.

uint8 = 255;

uint8 = 256;

int8 = 255;
int c;
c = a;

uint a;
uint8 b;
b = a

if(1) {}

* Tipos de Datos Complejos

- Arrays
- Structs
- Mapping
- String
- Bytes
- Enums

** Arrays
- Static
- Dynamic
** Structs
** Mapping
** String
I not a basic type and it is dynamic
not index access
cannot be expanded
complex string operations should be avoid
** Bytes
- Static
bytep[15]
- Dynamic
** Enums

* Funciones

* Manejo de Errores

* Herencia

* Eventos

* Tokens

* El estándar de tokens ERC 
