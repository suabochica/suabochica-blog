#+TITLE: MELPA packages in spacemacs
#+DESCRIPTION: Instalar paquetes en melpa dentro de spacemacs
#+AUTHOR: Sergio Benítez
#+DATE:<2020-11-10 Tue> 

* PROGRESS Layers y MELPA

MELPA (Milkypostman’s Emacs Lisp Package Archive) es un repositorio de paquetes
que contiene una cantidad enorme de paquetes útiles que complementan Emacs. Su
configuración es a través del archivo ~packages.el~ que funciona como un
administrador de paquetes.

Los layers son un concepto de Spacemacs el cual se define como: 

#+begin_notes
Una unidad de configuración recopilada que se puede habilitar o deshabilitar en
Spacemacs. Generalmente un layer reúne uno o más paquetes de MELPA sazonados
con código de configuración para que funcionen bien entre sí, bajo el contexto
de Spacemacs en general.
#+end_notes

Los layers son probrablemente la funcionalidad más grande de Spacemacs sobre el
Emacs vanilla. El proyecto entero está organizado con una serie de layers, cada
uno para una funcionalidad en particular. Esta es la [[https://www.spacemacs.org/layers/LAYERS.html][lista completa]] de los
layers de Spacemacs.

No obstante, hay un escenario en donde se quiere utilizar un complemento puntual
que no es ofrecido por los layers de Spacemacs y si por los paquetes en MELPA.

Afortunadamente los creadores de Spacemacs anticiparon este caso y en el archivo
de configuración ~.spacemacs~ disponen de una función cuyos argumentos son los
nombres de los paqutes que no están empaquetdos en un layer.

A continuación se muestra como se hace la instalación de los paquetes
˜drag-stuff˜ y ~atome-one-dark-theme~:

#+begin_src elisp
   ;; List of additional packages that will be installed without being wrapped
   ;; in a layer (generally the packages are installed only and should still be
   ;; loaded using load/require/use-package in the user-config section below in
   ;; this file). If you need some configuration for these packages, then
   ;; consider creating a layer. You can also put the configuration in
   ;; `dotspacemacs/user-config'. To use a local version of a package, use the
   ;; `:location' property: '(your-package :location "~/path/to/your-package/")
   ;; Also include the dependencies as they will not be resolved automatically.
   dotspacemacs-additional-packages '(drag-stuff
                                      atom-one-dark-theme)
#+end_src

* Referencia
- [[https://github.com/syl20bnr/spacemacs/issues/5968][How to install a MELPA package]]
